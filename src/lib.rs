extern crate bellman;

pub mod rescue;

#[cfg(test)]
mod test {
	extern crate rand;

	use self::rand::thread_rng;
	use bellman::{
		bn256::{Bn256, Fr},
		groth16::{
			create_random_proof, generate_random_parameters, prepare_verifying_key, verify_proof,
		},
		Field, PrimeField,
	};

	use super::rescue;

	use rescue::circuit::RescueCircuit;

	fn get_bn256_params() -> rescue::Params<Fr> {
		rescue::Params::new(
			// parameters choosen with https://github.com/KULeuven-COSIC/Marvellous rescue instance generator for m=8 and alpha=5
			8,
			10,
			5,
			&[
				&[
					"21888242871839275222246405745257275088548364400416034343660951283591189354992",
					"21888242871839275222246405745257275088548364400416030705728710320609011620617",
					"21888242871839275222246405745257275088548364400119975779959142830984988183117",
					"21888242871839275222246405745257275088548341084314296797671497491019167870617",
					"21888242871839275222246405745257275086723874806125148369752944138663210839367",
					"21888242871839275222246405745257132504672554002292093292632282403128542870617",
					"21888242871839275222246405734117196834978150525698917855330885079520144433117",
					"21888242871839275222245535415503636662019188250973264158525646355765261620617",
				],
				&[
					"46566009521484375000",
					"4547412972927093505859375",
					"370068619316928863525390625000",
					"29144756501843234174728393554687500",
					"2280582838395168190569751739501953125000",
					"178227564005000770766343275778770446777343750",
					"13924919584836545520588055464620464324951171875000",
					"1087898266914567948291418722668026233785629272460937500",
				],
				&[
					"21888242871839275222246405745257275088548364400416034343688503058768191308117",
					"21888242871839275222246405745257275088548364400416033396371433015433230370617",
					"21888242871839275222246405745257275088548364400338941491035858475485720604992",
					"21888242871839275222246405745257275088548358328977873018390127461234011620617",
					"21888242871839275222246405745257275088073273344602092816890080998221316308117",
					"21888242871839275222246405745257237960181622567492278465919752095023074120617",
					"21888242871839275222246405742356435831129745151070917978196694348135867089367",
					"21888242871839275222246179114290162920882745367551583873868810627737917870617",
				],
				&[
					"391149473203125000",
					"38188391827316757812500",
					"3107619844265676348984375000",
					"244738214978704934514253037109375",
					"19150775048838951372028726661484375000",
					"1496632609074933637491627676390113632812500",
					"116931896627757576840916513039448185157578125000",
					"9135421207462842268025450088673775508431434433593750",
				],
				&[
					"21888242871839275222246405745257275088548364400416034343698201053368233401867",
					"21888242871839275222246405745257275088548364400416034343392618817095656370617",
					"21888242871839275222246405745257275088548364400416009481466487503350095433117",
					"21888242871839275222246405745257275088548364398458108574657363751581275120617",
					"21888242871839275222246405745257275088548211193901876530443270368951773167492",
					"21888242871839275222246405745257275076575298623648320892881531790460025120617",
					"21888242871839275222246405745256339633298709844180172254431226421652407933117",
					"21888242871839275222246405672173904231447673228932693880987135948463931370617",
				],
				&[
					"5006713257000",
					"485802382250498250",
					"39484074419791495767000",
					"3108773708524817961171329500",
					"243249709264562701070355252267000",
					"19009772047515755756502160610569063875",
					"1485230454152824731536989930073007758517000",
					"116035066948364783121255289357524980910453829500",
				],
				&[
					"21888242871839275222246405745257275088548364400416034343698204186574219062837",
					"21888242871839275222246405745257275088548364400416034343698204036364874188937",
					"21888242871839275222246405745257275088548364400416034343686058350929718788187",
					"21888242871839275222246405745257275088548364400416033388377218212239943346937",
					"21888242871839275222246405745257275088548364400341299423745267562789249734437",
					"21888242871839275222246405745257275088548358560180485934112012737572891046937",
					"21888242871839275222246405745257275088092071467723996942315720124180306593812",
					"21888242871839275222246405745257239440279708070910811240250475687283302296937",
				],
				&[
					"97656",
					"7947261556",
					"625886840206056",
					"48975769621072897306",
					"3827456772141158994166056",
					"299039198587280398947721603556",
					"23362736428829868448189697999416056",
					"1825218456001772231793929085435472462931",
				],
			],
			&[
				"13704379950595062876965681494468237336048062051641852182459517137208532527656",
				"1546027193486433004861778125609391019087427012559769244117228922063648443056",
				"6259955422328144379955361153910647065540948046493365734622312784124100382117",
				"17545299477179240912123519604990302599813972851816958308926226889134229423776",
				"13949881738973041856316980788362344179614555297015274976361001962125899593131",
				"12455743259179779404637667541077410496652487110466719348501265374611716945789",
				"20507087446897575249731466474014333130268032427999425235033910126870243461911",
				"5456366648443685478162034749065398808295565809936437877753456657587567818902",
			],
			&[
				&[
					"7897853564276958334214468603203897520154891489600286770348232887190718230697",
					"11310972723508634666485784440114195323987623373489240386156363657972592637889",
					"16383651337644090722313274572289379168218245780523520967193539841029993172551",
					"19306563486653957297319716776525895326416632603921620229753286581552964639495",
					"13972664482939365210126934094159234477516423614171933027224960720992131660723",
					"3714466336318438487208859168496175617840683365103447095286552900687717723809",
					"1596938859090899602275687562366103397961147554801212225870985431436994895131",
					"1804362872899866995550019591021113047181201776456876099010313193931142028794",
				],
				&[
					"11997476979649706166628591475876380529791396928089723905860179374857864726071",
					"3358221985266097444445103450467306798663635253390735595238412840047057109206",
					"20936039221738076169991664483088569164149507060948581631797398419708108094482",
					"19667773949019642472493030024822902610198030586241139616586889558416819285262",
					"13863553253145612564629096839163156810802216429640669856987145967323207410509",
					"19384255837703781581818619941103992392218719827512626671850429446834300524280",
					"21184773793927862104225525427705251552748684553382600329427001063711335358489",
					"17250450671778424279069213596445482771974600736740494308485859852865380915697",
				],
				&[
					"14613516837064033601098425266946467918409544647446217386229959902054563533267",
					"376600575581954944138907282479272751264978206975465380433764825531344567663",
					"7549886658634274343394883631367643327196152481472281919735617268044202589860",
					"3682071510138521345600424597536598375718773365536872232193107639375194756918",
					"14910919218145812220780527690731032179494541897268776131239962376171657535230",
					"10257734867868901489281448873462275888117956878438433971429895315446063901086",
					"400456570908486696849138298375881100690963025475664563258385409447538235081",
					"21663317380571791832909997299481896459241929404413878318271683915422925222920",
				],
				&[
					"21852330369737308717673587060479981368324566849038348520768950894279889788512",
					"13202518510371977336374443304155384188209498921232829085347937000071600694034",
					"11617133591098689941749514283465628050949636389625844519438297707813835796282",
					"18922175068039141213029923589167920663510708060751874760386121539588488248016",
					"12398814282672249465679057873787160749414964455771909230708237578423467002078",
					"14108642757286287706142930587682283660210530567625638290155437821148682639507",
					"6603679948808171016856104605292110774425886680421801131140008881626747950120",
					"9522527667866460839403995410222170399042630400148378517249078498073151187189",
				],
				&[
					"391682792746842081490189190868622532609714332234712534647861540197115735986",
					"12956852736750985969902398182161408218861373969867354241038166837136533978145",
					"16626888555187599904953678189293616306155918553248207037637151480396831774405",
					"9449606965081114016286152558674120175101662548185754211318619335483060978407",
					"7007060498762746842011806044318572036577183854861388865050138238026203732604",
					"13108885260256985592086105309833753385550759124921274231049714713378593051980",
					"12921655926554233887248528471531664651297565493642413665329071689528426481291",
					"18312821154172982357094259783102076555233143601345860216316345668896674681880",
				],
				&[
					"21137306255631095718546891975094721475704777699244558346065140483085786040376",
					"3477241862236574004022549955349228208989476932570953611726664289897846140673",
					"17869036417581921308682190894921146849791566835188631527091320491619700018749",
					"12146351204375988122708807483777851257280382317547577340144641191776596611101",
					"10270544630778574184836029119773862573128194544178601139196977296998823768762",
					"13281693578882320856532951972072551779626011733177603833314160853098353116541",
					"16053485597954168976445114255228472397119180703772929215031954161653204386130",
					"18134665117993000327225641636134840394910310107528995479154837971571070415168",
				],
				&[
					"7357442307999015324018829059588001857704357717627210937435183523585392834218",
					"4600349038800603111682282621946135177240020310948160961591623149122659678920",
					"3628540745546708922795161804862557330352521504727948774548149351784017716517",
					"7708874790182035005716408383044220108350683325258576176530071219877878289373",
					"18923845449271277107282941632927987484566912423809094916010791728980718560407",
					"13579313892067118876634045895172133336637331857594350116054497879215171863649",
					"21470254783240658203857829260751842148110192381533117933665642801633322298084",
					"9389155023168729240033386790232982884755170513142893767546175132814605309821",
				],
				&[
					"8854555244111347142100068299105976886849469905591487309503207348809497894056",
					"6867204677049435738972763956967856539180902979489411504519966943146350902474",
					"18965251915394833376181156227537602255829756615920577290848362347912944161366",
					"16012564885483268043339073397613188815911892685677163196173638329665355372785",
					"6034519786948314635296849033858027097127077825013549879298727927617203430336",
					"4560135557151331875918117155399154075629348773218452862892167438702139465111",
					"12453234933799086618153136193346604989597493007175343801089554702970133578595",
					"10915250925960871340709129845388245518240008464983333997536529514717957990317",
				],
			],
			&[
				"3657449225795807244695279233641963439260156676188608183512319672986183606996",
				"7562520077752545718106965949315851405286299569049714833245880154614569971295",
				"11372735249423445087684857348192961145452643259769972728028063787325182060934",
				"9064213687112329583555264303020972163560438175869458399645757741651886149817",
				"18843541674103083387953131860721487500102150883102226325132225042731363262905",
				"8034423506050898415605622811511038081288357683373832611391728592478318612768",
				"2111579527937825380291515401431781441724531312081805684610057400467766714122",
				"20339279769661606457494952776306876843329519439434490048156316404864644899980",
			],
		)
	}

	#[test]
	fn test_block_enc() {
		let rescue_params = get_bn256_params();

		let x: Vec<Fr> = (0..rescue_params.m)
			.map(|i| Fr::from_str(&i.to_string()).unwrap())
			.collect();
		let k: Vec<Fr> = (0..rescue_params.m)
			.map(|_| Fr::from_str("0").unwrap())
			.collect();

		let y = rescue::block_enc(&rescue_params, &k, &x);

		let z = vec![
			Fr::from_str(
				"18115515053415953917581139486887001768897115759088831626418737169294616432439",
			)
			.unwrap(),
			Fr::from_str(
				"15391884412258471150297222203888131333601336657782833535676486098849129264420",
			)
			.unwrap(),
			Fr::from_str(
				"9497864613630138039663614977172847176692393569290153329455703963925372784329",
			)
			.unwrap(),
			Fr::from_str(
				"14647769366465721237589983252638314715427476235771411034267772347394091077881",
			)
			.unwrap(),
			Fr::from_str(
				"12066478999576774568801435717359831612924741139745085014633091170896838474739",
			)
			.unwrap(),
			Fr::from_str(
				"17898368672876968277334019209354291943645716409502817530813944490405519824501",
			)
			.unwrap(),
			Fr::from_str(
				"8877285359103629518482023177163690385725232219702479947631784014650451293579",
			)
			.unwrap(),
			Fr::from_str(
				"15089397089390005663769203919803030132189261705103206323263396024009124558142",
			)
			.unwrap(),
		];

		for (y, z) in y.iter().zip(z.iter()) {
			let mut w = *y;
			w.sub_assign(z);
			assert!(w.is_zero());
		}
	}

	#[test]
	fn test_circuit() {
		let rescue_params = get_bn256_params();

		let rng = &mut thread_rng();
		let c = RescueCircuit::<Bn256> {
			params: &rescue_params,
			x: (0..rescue_params.m).map(|_| None).collect(),
			k: (0..rescue_params.m).map(|_| None).collect(),
		};
		let params = generate_random_parameters(c, rng).unwrap();

		let pvk = prepare_verifying_key(&params.vk);

		let x: Vec<Fr> = (0..rescue_params.m)
			.map(|i| Fr::from_str(&i.to_string()).unwrap())
			.collect();
		let k: Vec<Fr> = (0..rescue_params.m)
			.map(|_| Fr::from_str("0").unwrap())
			.collect();

		let y = rescue::block_enc(&rescue_params, &k, &x);

		let c = RescueCircuit::<Bn256> {
			params: &rescue_params,
			x: x.iter().map(|x| Some(*x)).collect(),
			k: k.iter().map(|k| Some(*k)).collect(),
		};
		let proof = create_random_proof(c, &params, rng).unwrap();

		let correct = verify_proof(&pvk, &proof, &y).unwrap();

		println!("{}", correct);
	}
}
